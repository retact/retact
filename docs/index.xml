<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>retact</title>
    <link>https://retact.github.io/retact/</link>
    <description>Recent content on retact</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 07 Sep 2021 01:28:40 +0900</lastBuildDate><atom:link href="https://retact.github.io/retact/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TwitterのタイムラインをDiscordに表示させる</title>
      <link>https://retact.github.io/retact/posts/twitter-discord/</link>
      <pubDate>Tue, 07 Sep 2021 01:28:40 +0900</pubDate>
      
      <guid>https://retact.github.io/retact/posts/twitter-discord/</guid>
      <description>はじめに みなさんはDiscord使っていますでしょうか．
僕の使っているサーバでは分報というものがあり,みんなのやっていることを共有できてとても楽しかったのですが最近身の回りの人は沙汰がなく，Twitterの方が捗っている方が多い傾向にあります．
それだと少し寂しい気がしたので,みんながTweetしたらDiscordに表示させるようにしたらいいのではという思いから,雑ではありますが実装してみました．
※今回使うTwitterStreamAPIの鍵垢のツイートの抽出はよくわからなかったので本文は公開垢のみの抽出とWebhooksを用いた出力について書かれています．
実装したコードはこちらに載せておきます．
Twitterのツイートを読み込むために まずタイムラインを抽出するためにご自身のtwitterアカウントでAPIキーとアクセストークンを取得する必要があります．
こちらを参考にTwitterのAPI利用申請を行えば(少しUIは異なるものの)問題なく行えるかと思います．
ここで入手した
○ Consumer API key
○ Consumer API secret key
○ Access token
○ Access token secret
の4つは後ほど使用します．
Twitter APIを使用したOAuth
Twitter Streaming API 今回はTwitter Streaming APIを使用するためにTweepyライブラリを使用させていただきました．
Tweetをとりあえず出力する． config.pyに先ほど取得した
○ Consumer API key
○ Consumer API secret key
○ Access token
○ Access token secret
を記入してtwi-cord.pyを実行するとツイートが実行画面に表示されるかとおもいます．
※ デフォルトのアクセスレベルでは、最大400のトラックキーワード、5000のフォローユーザーID、25のロケーションボックスが許可される
CONFIG = { &amp;#34;CONSUMER_KEY&amp;#34;: &amp;#34;Consumer API keyを記入してください&amp;#34;, &amp;#34;CONSUMER_SECRET&amp;#34;: &amp;#34;Consumer API secret keyを記入してください&amp;#34;, &amp;#34;ACCESS_TOKEN&amp;#34;: &amp;#34;Access tokenを記入してください&amp;#34;, &amp;#34;ACCESS_SECRET&amp;#34;: &amp;#34;Access token secretを記入してください&amp;#34;, } import tweepy from config import CONFIG auth = tweepy.</description>
    </item>
    
    <item>
      <title>相互相関関数を用いてEMGの遅延を推定する</title>
      <link>https://retact.github.io/retact/posts/correct-emg-misalignment/</link>
      <pubDate>Sat, 03 Jul 2021 01:28:40 +0900</pubDate>
      
      <guid>https://retact.github.io/retact/posts/correct-emg-misalignment/</guid>
      <description>2つのMyoデバイスを使ってそれぞれEMGを取得した際にこのようにデータの遅延が生じてしまいます.
EMGと同時に取得されるタイムスタンプなどで補正すれば問題はないのですが，同じ腕の信号を取得しているため今回は相互相関関数を使ってこの2つの信号の遅延を推定してみたいと思います.
また今回使用したコードはこちらにまとめてあります． 相互相関関数(Cross-correlation function) 相互相関関数は2つの信号の類似性を見るための関数であり，xとyの平均がそれぞれ0で2つの信号が連続信号であるとき以下のような式で表されます.
同時に観測された二つの不規則信号に対して，x(t)と時間τだけずらしたy(t+τ)の相関を示します.
このような性質からレーダーシステムなどで送信信号と受信信号を比較して目標物の位置を特定する際に利用され，整合フィルタ(Match Filter)とも呼ばれています.
Raw-EMGの相関関数で推定する. python で相互相関関数を利用する場合はnumpyのcorrelate関数やこれに基づいたmatplotlib.pyplotのxcorr関数を利用する方法などがありますが，今回はnumpyのcorrelate関数を利用します．
numpy.correlate
matplotlib.pyplot.xcorr
import numpy as np np.correlate(a, v, mode=&amp;#39;valid&amp;#39;) また実際データに相互相関関数を利用する際にはデータを正規化する必要があります．今回は標準化の処理を行います．
dev1_emg1=(dev1_emg1-np.mean(dev1_emg1))/np.std(dev1_emg1) dev2_emg1=(dev2_emg1-np.mean(dev2_emg1))/np.std(dev2_emg1) そのようにして実際に実装すると以下のようなコードで以下のような結果を得ることができます.
import numpy as np import myplotlib.pyplot as plt #　Standardization dev1_emg1=(dev1_emg1-np.mean(dev1_emg1))/np.std(dev1_emg1) dev2_emg1=(dev2_emg1-np.mean(dev2_emg1))/np.std(dev2_emg1) # Cross-correlation function corr=np.correlate(dev1_emg1, dev2_emg1,&amp;#34;full&amp;#34;) estimated_delay = corr.argmax() - (len(dev2_emg1) - 1) print(&amp;#34;estimated delay is &amp;#34; + str(estimated_delay)) # Plotting plt.figure(figsize=(15,8)) plt.subplot(2, 1, 1) plt.plot(np.arange(len(dev1_emg1)), dev1_emg1) plt.plot(np.arange(len(dev2_emg1)) + estimated_delay, dev2_emg1) plt.xlabel(&amp;#39;Number of data&amp;#39;,fontsize=15) plt.</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://retact.github.io/retact/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://retact.github.io/retact/about/</guid>
      <description>I will contribute to the development of sEMG-based entertainment and human-assisted robotics by improving and simplifying the non-invasive acquisition and analysis of EMG data.
Profile retact - Takuto Soeda
Age - 20
Labo - Assistive Robotics Laboratory
Words - sEMG, Prothetic-hand, EMG-ArmBand
Like - EMG,vim,VR
Result Activities Cansat,Rocket,EMG-ArmBand
 2021- Assistive Robotics Laboratory 2021- K3(club activities) 2019-2020 Programming Instructor at LITALICO Inc. 2019-2020 CORE(Charange of Rockets Engineering) Avionics group  Ptarmigan - Gemini QUEST Amatsukaze - Stream Conductor (Piglet _- CRYSTAL PALACE)   2019- Department of Mechanical Engineering, Hosei University 2018 Participated in the CANSAT European Competition 2018  Yatagarasu   2018 Awarded Kawasaki City Cultural Prize 2018 Received Hosei University&amp;rsquo;s Future of Society Award 2017 Winner of the CANSAT Koshien National Competition  GEMINI    </description>
    </item>
    
  </channel>
</rss>
